{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Indraneel\\\\Desktop\\\\INR\\\\frontend\\\\my-app\\\\src\\\\components\\\\test.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\n\nconst isObject = val => {\n  return typeof val === 'object' && val !== null;\n};\n\nconst classnames = (...args) => {\n  const classes = [];\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      classes.push(arg);\n    } else if (isObject(arg)) {\n      Object.keys(arg).forEach(key => {\n        if (arg[key]) {\n          classes.push(key);\n        }\n      });\n    } else {\n      throw new Error('`classnames` only accepts string or object as arguments');\n    }\n  });\n  return classes.join(' ');\n};\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.handlePostAddressChange = address => {\n      // console.log(address);\n      this.setState({\n        postAddress: address,\n        latitude: null,\n        longitude: null,\n        errorMessage: \"\"\n      });\n    };\n\n    this.state = {\n      name: \"React\",\n      postAddress: \"\",\n      post_address_obj: {},\n      errorMessage: \"\",\n      latitude: null,\n      longitude: null,\n      isGeocoding: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"post_elements_5\",\n      className: \"div-capsule-margin location_margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(PlacesAutocomplete, {\n      value: this.state.postAddress,\n      onChange: this.handlePostAddressChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"Demo__search-bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Demo__search-input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, getInputProps({\n        placeholder: \"Tag the location\",\n        className: \"Demo__search-input\"\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), this.state.postAddress.length > 0 && React.createElement(\"button\", {\n        className: \"Demo__clear-button\",\n        onClick: this.handleCloseClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"x\")), suggestions.length > 0 && React.createElement(\"div\", {\n        className: \"Demo__autocomplete-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, suggestions.map(suggestion => {\n        const className = classnames(\"Demo__suggestion-item\", {\n          \"Demo__suggestion-item--active\": suggestion.active\n        });\n        return (\n          /* eslint-disable react/jsx-key */\n          React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }), React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, suggestion.formattedSuggestion.mainText), \" \", React.createElement(\"small\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, suggestion.formattedSuggestion.secondaryText))\n        );\n        /* eslint-enable react/jsx-key */\n      }), React.createElement(\"div\", {\n        className: \"Demo__dropdown-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://files.hostgator.co.in/hostgator254362/image/powered-by-google.png\",\n        className: \"Demo__dropdown-footer-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))));\n    })));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/Indraneel/Desktop/INR/frontend/my-app/src/components/test.js"],"names":["React","Component","render","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","isObject","val","classnames","args","classes","forEach","arg","push","Object","keys","key","Error","join","Search","constructor","handlePostAddressChange","address","setState","postAddress","latitude","longitude","errorMessage","state","name","post_address_obj","isGeocoding","getInputProps","suggestions","getSuggestionItemProps","placeholder","className","length","handleCloseClick","map","suggestion","active","formattedSuggestion","mainText","secondaryText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\r\n\r\nconst isObject = val => {\r\n  return typeof val === 'object' && val !== null;\r\n};\r\n\r\nconst classnames = (...args) => {\r\n  const classes = [];\r\n  args.forEach(arg => {\r\n    if (typeof arg === 'string') {\r\n      classes.push(arg);\r\n    } else if (isObject(arg)) {\r\n      Object.keys(arg).forEach(key => {\r\n        if (arg[key]) {\r\n          classes.push(key);\r\n        }\r\n      });\r\n    } else {\r\n      throw new Error(\r\n        '`classnames` only accepts string or object as arguments'\r\n      );\r\n    }\r\n  });\r\n\r\n  return classes.join(' ');\r\n};\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"React\",\r\n      postAddress: \"\",\r\n      post_address_obj: {},\r\n      errorMessage: \"\",\r\n      latitude: null,\r\n      longitude: null,\r\n      isGeocoding: false\r\n    };\r\n  }\r\n\r\n  handlePostAddressChange = address => {\r\n    // console.log(address);\r\n    this.setState({\r\n      postAddress: address,\r\n      latitude: null,\r\n      longitude: null,\r\n      errorMessage: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          id=\"post_elements_5\"\r\n          className=\"div-capsule-margin location_margin\"\r\n        >\r\n          <PlacesAutocomplete\r\n            value={this.state.postAddress}\r\n            onChange={this.handlePostAddressChange}\r\n          >\r\n            {({ getInputProps, suggestions, getSuggestionItemProps }) => {\r\n              return (\r\n                <div className=\"Demo__search-bar-container\">\r\n                  <div className=\"Demo__search-input-container\">\r\n                    <input\r\n                      {...getInputProps({\r\n                        placeholder: \"Tag the location\",\r\n                        className: \"Demo__search-input\"\r\n                      })}\r\n                    />\r\n                    {this.state.postAddress.length > 0 && (\r\n                      <button\r\n                        className=\"Demo__clear-button\"\r\n                        onClick={this.handleCloseClick}\r\n                      >\r\n                        x\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  {suggestions.length > 0 && (\r\n                    <div className=\"Demo__autocomplete-container\">\r\n                      {suggestions.map(suggestion => {\r\n                        const className = classnames(\"Demo__suggestion-item\", {\r\n                          \"Demo__suggestion-item--active\": suggestion.active\r\n                        });\r\n\r\n                        return (\r\n                          /* eslint-disable react/jsx-key */\r\n                          <div\r\n                            {...getSuggestionItemProps(suggestion, {\r\n                              className\r\n                            })}\r\n                          >\r\n                            <strong>\r\n                              {suggestion.formattedSuggestion.mainText}\r\n                            </strong>{\" \"}\r\n                            <small>\r\n                              {suggestion.formattedSuggestion.secondaryText}\r\n                            </small>\r\n                          </div>\r\n                        );\r\n                        /* eslint-enable react/jsx-key */\r\n                      })}\r\n                      <div className=\"Demo__dropdown-footer\">\r\n                        <div>\r\n                          <img\r\n                            src=\"http://files.hostgator.co.in/hostgator254362/image/powered-by-google.png\"\r\n                            className=\"Demo__dropdown-footer-image\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          </PlacesAutocomplete>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}