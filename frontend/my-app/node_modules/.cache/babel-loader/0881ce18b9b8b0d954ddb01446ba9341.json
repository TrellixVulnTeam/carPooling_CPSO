{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Indraneel\\\\Desktop\\\\INRservices\\\\frontend\\\\my-app\\\\src\\\\components\\\\FindaRide.js\";\nimport React, { Component } from 'react';\nimport Toper3 from './Toper3';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBCard, MDBCardBody } from 'mdbreact';\nimport { Fragment } from 'react';\nimport axios from 'axios';\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport TimeField from 'react-simple-timefield';\n\nconst isObject = val => {\n  return typeof val === 'object' && val !== null;\n};\n\nconst classnames = (...args) => {\n  const classes = [];\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      classes.push(arg);\n    } else if (isObject(arg)) {\n      Object.keys(arg).forEach(key => {\n        if (arg[key]) {\n          classes.push(key);\n        }\n      });\n    } else {\n      throw new Error('`classnames` only accepts string or object as arguments');\n    }\n  });\n  return classes.join(' ');\n};\n\nclass FindaRide extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSourceAddressChange = address => {\n      // console.log(address);\n      this.setState({\n        source: address,\n        latitude: null,\n        longitude: null,\n        errorMessage: \"\"\n      });\n    };\n\n    this.handleDestinationAddressChange = address => {\n      // console.log(address);\n      this.setState({\n        destination: address,\n        d_latitude: null,\n        d_longitude: null,\n        d_errorMessage: \"\"\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      axios.get('http://127.0.0.1:8000/api2/').then(res => {\n        this.setState({\n          info: res.data\n        }); //console.log(res.data);\n\n        this.refine();\n      });\n    };\n\n    this.state = {\n      info: [],\n      source: '',\n      post_address_obj: {},\n      errorMessage: '',\n      latitude: null,\n      longitude: null,\n      isGeocoding: false,\n      d_post_address_obj: {},\n      d_errorMessage: '',\n      d_latitude: null,\n      d_longitude: null,\n      d_isGeocoding: false,\n      destination: ''\n    };\n  }\n\n  refine() {\n    //alert(\"refinement\");\n    const result = this.state.info.filter(word => word.source == this.state.source && word.destination == this.state.destination);\n    console.log(\"filtered \" + result.length);\n    this.props.history.push({\n      pathname: \"findlist\",\n      state: {\n        details: this.props.location.state.details,\n        info: result\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Toper3, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.location.state.details.firstname, \" \", this.props.location.state.details.lastname), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" \", React.createElement(MDBCard, {\n      color: \"indigo\",\n      text: \"white\",\n      className: \"text-center\",\n      align: \"center\",\n      style: {\n        maxWidth: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"FILL IN THE DETAILS TO FIND A RIDE\")))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" Source \"), React.createElement(PlacesAutocomplete, {\n      value: this.state.source,\n      onChange: this.handleSourceAddressChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"Demo__search-bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Demo__search-input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, getInputProps({\n        placeholder: \"Tag the location\",\n        className: \"Demo__search-input\"\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), this.state.source.length > 0 && React.createElement(\"button\", {\n        className: \"Demo__clear-button\",\n        onClick: this.handleCloseClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"x\")), suggestions.length > 0 && React.createElement(\"div\", {\n        className: \"Demo__autocomplete-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, suggestions.map(suggestion => {\n        const className = classnames(\"Demo__suggestion-item\", {\n          \"Demo__suggestion-item--active\": suggestion.active\n        });\n        return (\n          /* eslint-disable react/jsx-key */\n          React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }), React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, suggestion.formattedSuggestion.mainText), \" \", React.createElement(\"small\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, suggestion.formattedSuggestion.secondaryText))\n        );\n        /* eslint-enable react/jsx-key */\n      }), React.createElement(\"div\", {\n        className: \"Demo__dropdown-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://files.hostgator.co.in/hostgator254362/image/powered-by-google.png\",\n        className: \"Demo__dropdown-footer-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })))));\n    }))), React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"SOURCE\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      value: this.state.source,\n      style: {\n        maxWidth: \"18rem\"\n      } //icon=\"envelope\"\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \" Destination \"), React.createElement(PlacesAutocomplete, {\n      value: this.state.destination,\n      onChange: this.handleDestinationAddressChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"Demo__search-bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Demo__search-input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, getInputProps({\n        placeholder: \"Tag the location\",\n        className: \"Demo__search-input\"\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), this.state.destination.length > 0 && React.createElement(\"button\", {\n        className: \"Demo__clear-button\",\n        onClick: this.handleCloseClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"x\")), suggestions.length > 0 && React.createElement(\"div\", {\n        className: \"Demo__autocomplete-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, suggestions.map(suggestion => {\n        const className = classnames(\"Demo__suggestion-item\", {\n          \"Demo__suggestion-item--active\": suggestion.active\n        });\n        return (\n          /* eslint-disable react/jsx-key */\n          React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }), React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, suggestion.formattedSuggestion.mainText), \" \", React.createElement(\"small\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, suggestion.formattedSuggestion.secondaryText))\n        );\n        /* eslint-enable react/jsx-key */\n      }), React.createElement(\"div\", {\n        className: \"Demo__dropdown-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://files.hostgator.co.in/hostgator254362/image/powered-by-google.png\",\n        className: \"Demo__dropdown-footer-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })))));\n    }))), React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"DESTINATION\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      value: this.state.destination,\n      style: {\n        maxWidth: \"18rem\"\n      } //icon=\"envelope\"\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"4\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \" DateofJourney \"), React.createElement(\"input\", {\n      type: \"date\",\n      value: this.state.date,\n      onChange: this.handledatechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), \"  \")), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"anything to say\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      value: this.state.ats,\n      onChange: this.handleatschange,\n      style: {\n        maxWidth: \"18rem\"\n      },\n      icon: \"envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }))), React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      gradient: \"blue\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Submit\")))))));\n  }\n\n}\n\nexport default FindaRide;","map":{"version":3,"sources":["C:/Users/Indraneel/Desktop/INRservices/frontend/my-app/src/components/FindaRide.js"],"names":["React","Component","Toper3","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","MDBCard","MDBCardBody","Fragment","axios","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","TimeField","isObject","val","classnames","args","classes","forEach","arg","push","Object","keys","key","Error","join","FindaRide","constructor","props","handleSourceAddressChange","address","setState","source","latitude","longitude","errorMessage","handleDestinationAddressChange","destination","d_latitude","d_longitude","d_errorMessage","handleSubmit","event","preventDefault","get","then","res","info","data","refine","state","post_address_obj","isGeocoding","d_post_address_obj","d_isGeocoding","result","filter","word","console","log","length","history","pathname","details","location","render","firstname","lastname","maxWidth","getInputProps","suggestions","getSuggestionItemProps","placeholder","className","handleCloseClick","map","suggestion","active","formattedSuggestion","mainText","secondaryText","date","handledatechange","ats","handleatschange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Toper3 from './Toper3';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput,MDBCard, MDBCardBody } from 'mdbreact'; \r\nimport { Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\r\nimport TimeField from 'react-simple-timefield';\r\n\r\nconst isObject = val => {\r\n    return typeof val === 'object' && val !== null;\r\n  };\r\n  \r\n  const classnames = (...args) => {\r\n    const classes = [];\r\n    args.forEach(arg => {\r\n      if (typeof arg === 'string') {\r\n        classes.push(arg);\r\n      } else if (isObject(arg)) {\r\n        Object.keys(arg).forEach(key => {\r\n          if (arg[key]) {\r\n            classes.push(key);\r\n          }\r\n        });\r\n      } else {\r\n        throw new Error(\r\n          '`classnames` only accepts string or object as arguments'\r\n        );\r\n      }\r\n    });\r\n  \r\n    return classes.join(' ');\r\n  };\r\n\r\n\r\nclass FindaRide extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            info : [],\r\n            source: '',\r\n            post_address_obj: {},\r\n            errorMessage: '',\r\n            latitude: null,\r\n            longitude: null,\r\n            isGeocoding: false,   \r\n            d_post_address_obj: {},\r\n            d_errorMessage: '',\r\n            d_latitude: null,\r\n            d_longitude: null,\r\n            d_isGeocoding: false,                      \r\n            destination : ''\r\n        }\r\n        }\r\n        handleSourceAddressChange = address => {\r\n            // console.log(address);\r\n            this.setState({\r\n              source: address,\r\n              latitude: null,\r\n              longitude: null,\r\n              errorMessage: \"\"\r\n            });\r\n          };\r\n          handleDestinationAddressChange = address => {\r\n            // console.log(address);\r\n            this.setState({\r\n              destination: address,\r\n              d_latitude: null,\r\n              d_longitude: null,\r\n              d_errorMessage: \"\"\r\n            });\r\n          }; \r\n          refine(){\r\n              //alert(\"refinement\");\r\n              const result = this.state.info.filter(word => word.source ==this.state.source&&word.destination==this.state.destination);\r\n              console.log(\"filtered \"+result.length);\r\n              this.props.history.push({pathname : `findlist`, state : {details : this.props.location.state.details,info : result}}); \r\n\r\n          }\r\n          handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            axios.get('http://127.0.0.1:8000/api2/')\r\n            .then(res=>{\r\n                this.setState({\r\n                    info : res.data\r\n                });\r\n                //console.log(res.data);\r\n                this.refine();\r\n\r\n            })                \r\n        }            \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toper3 >{this.props.location.state.details.firstname} {this.props.location.state.details.lastname}</Toper3>\r\n                <br/>              \r\n                <MDBContainer>\r\n                <MDBRow center>\r\n    \r\n                <MDBCol md=\"6\" className=\"mb-4\"  > {/*style={{ maxWidth: \"22rem\" }}*/}\r\n                <MDBCard color=\"indigo\" text=\"white\" className=\"text-center\" align=\"center\" style={{ maxWidth: \"22rem\" }}>\r\n                    <MDBCardBody align = \"center\" >\r\n                            FILL IN THE DETAILS TO FIND A RIDE\r\n                    </MDBCardBody>\r\n                </MDBCard> \r\n                </MDBCol>   \r\n                </MDBRow > \r\n                <form onSubmit={this.handleSubmit}>\r\n                <MDBRow center>\r\n                    <MDBCol md=\"6\" className=\"mb-4\">\r\n                    \r\n                    <label> Source </label>\r\n    \r\n                    <PlacesAutocomplete\r\n                    value={this.state.source}\r\n                    onChange={this.handleSourceAddressChange}\r\n                    >\r\n                    {({ getInputProps, suggestions, getSuggestionItemProps }) => {\r\n                    return (\r\n                        <div className=\"Demo__search-bar-container\">\r\n                        <div className=\"Demo__search-input-container\">\r\n                            <input\r\n                            {...getInputProps({\r\n                                placeholder: \"Tag the location\",\r\n                                className: \"Demo__search-input\"\r\n                            })}\r\n                            />\r\n                            {this.state.source.length > 0 && (\r\n                            <button\r\n                                className=\"Demo__clear-button\"\r\n                                onClick={this.handleCloseClick}\r\n                            >\r\n                                x\r\n                            </button>\r\n                            )}\r\n                        </div>\r\n                        {suggestions.length > 0 && (\r\n                            <div className=\"Demo__autocomplete-container\">\r\n                            {suggestions.map(suggestion => {\r\n                                const className = classnames(\"Demo__suggestion-item\", {\r\n                                \"Demo__suggestion-item--active\": suggestion.active\r\n                                });\r\n\r\n                                return (\r\n                                /* eslint-disable react/jsx-key */\r\n                                <div\r\n                                    {...getSuggestionItemProps(suggestion, {\r\n                                    className\r\n                                    })}\r\n                                >\r\n                                    <strong>\r\n                                    {suggestion.formattedSuggestion.mainText}\r\n                                    </strong>{\" \"}\r\n                                    <small>\r\n                                    {suggestion.formattedSuggestion.secondaryText}\r\n                                    </small>\r\n                                </div>\r\n                                );\r\n                                /* eslint-enable react/jsx-key */\r\n                            })}\r\n                            <div className=\"Demo__dropdown-footer\">\r\n                                <div>\r\n                                <img\r\n                                    src=\"http://files.hostgator.co.in/hostgator254362/image/powered-by-google.png\"\r\n                                    className=\"Demo__dropdown-footer-image\"\r\n                                />\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        )}\r\n                        </div>\r\n                    );\r\n                    }}\r\n                </PlacesAutocomplete>\r\n                </MDBCol>\r\n                </MDBRow>\r\n                <MDBRow center>\r\n                <MDBCol md=\"6\" className=\"mb-4\">\r\n                <MDBInput\r\n                label=\"SOURCE\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                value = {this.state.source}\r\n                style={{ maxWidth: \"18rem\" }}\r\n                //icon=\"envelope\"\r\n                required\r\n                />      \r\n                </MDBCol>\r\n                </MDBRow>                  \r\n                <MDBRow center>\r\n                    <MDBCol md=\"6\" className=\"mb-4\">\r\n                    \r\n                    <label> Destination </label>\r\n    \r\n                    <PlacesAutocomplete\r\n                    value={this.state.destination}\r\n                    onChange={this.handleDestinationAddressChange}\r\n                    >\r\n                    {({ getInputProps, suggestions, getSuggestionItemProps }) => {\r\n                    return (\r\n                        <div className=\"Demo__search-bar-container\">\r\n                        <div className=\"Demo__search-input-container\">\r\n                            <input\r\n                            {...getInputProps({\r\n                                placeholder: \"Tag the location\",\r\n                                className: \"Demo__search-input\"\r\n                            })}\r\n                            />\r\n                            {this.state.destination.length > 0 && (\r\n                            <button\r\n                                className=\"Demo__clear-button\"\r\n                                onClick={this.handleCloseClick}\r\n                            >\r\n                                x\r\n                            </button>\r\n                            )}\r\n                        </div>\r\n                        {suggestions.length > 0 && (\r\n                            <div className=\"Demo__autocomplete-container\">\r\n                            {suggestions.map(suggestion => {\r\n                                const className = classnames(\"Demo__suggestion-item\", {\r\n                                \"Demo__suggestion-item--active\": suggestion.active\r\n                                });\r\n\r\n                                return (\r\n                                /* eslint-disable react/jsx-key */\r\n                                <div\r\n                                    {...getSuggestionItemProps(suggestion, {\r\n                                    className\r\n                                    })}\r\n                                >\r\n                                    <strong>\r\n                                    {suggestion.formattedSuggestion.mainText}\r\n                                    </strong>{\" \"}\r\n                                    <small>\r\n                                    {suggestion.formattedSuggestion.secondaryText}\r\n                                    </small>\r\n                                </div>\r\n                                );\r\n                                /* eslint-enable react/jsx-key */\r\n                            })}\r\n                            <div className=\"Demo__dropdown-footer\">\r\n                                <div>\r\n                                <img\r\n                                    src=\"http://files.hostgator.co.in/hostgator254362/image/powered-by-google.png\"\r\n                                    className=\"Demo__dropdown-footer-image\"\r\n                                />\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        )}\r\n                        </div>\r\n                    );\r\n                    }}\r\n                </PlacesAutocomplete>\r\n                </MDBCol>\r\n                </MDBRow>\r\n                    \r\n                 <MDBRow center>\r\n                <MDBCol md=\"6\" className=\"mb-4\">\r\n                <MDBInput\r\n                label=\"DESTINATION\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                value = {this.state.destination}\r\n                style={{ maxWidth: \"18rem\" }}\r\n                //icon=\"envelope\"\r\n                required\r\n                />      \r\n                </MDBCol>\r\n                </MDBRow>                          \r\n                <br/>\r\n                <br/>                                                         \r\n                <MDBRow>  \r\n                <MDBCol md=\"4\" className=\"mb-4\">                   \r\n                                \r\n                <label> DateofJourney </label>    \r\n                <input type = \"date\" value = {this.state.date} onChange={this.handledatechange} />  {/*(onChange = {event => this.setState({date:event.target.value})} required*/}\r\n                </MDBCol>\r\n                </MDBRow> \r\n\r\n                <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-4\">\r\n                <MDBInput\r\n                label=\"anything to say\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                value = {this.state.ats} onChange={this.handleatschange}\r\n                style={{ maxWidth: \"18rem\" }}\r\n                icon=\"envelope\"\r\n                \r\n                />      \r\n                </MDBCol>\r\n                </MDBRow>                                                              \r\n                    <MDBRow center>  \r\n                    <MDBCol md=\"6\" className=\"mb-4\">                   \r\n                    <Fragment>\r\n\r\n                    <MDBBtn gradient=\"blue\" type=\"submit\">Submit</MDBBtn>\r\n                    </Fragment>  \r\n                    </MDBCol>\r\n                </MDBRow> \r\n                </form>\r\n                </MDBContainer>                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindaRide;"]},"metadata":{},"sourceType":"module"}