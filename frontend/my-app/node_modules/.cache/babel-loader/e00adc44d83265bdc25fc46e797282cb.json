{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Indraneel\\\\Desktop\\\\INR\\\\frontend\\\\my-app\\\\src\\\\components\\\\FindaRide.js\";\nimport React, { Component } from 'react';\nimport Toper3 from './Toper3';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBCard, MDBCardBody } from 'mdbreact';\nimport { Fragment } from 'react';\nimport axios from 'axios';\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\n\nconst isObject = val => {\n  return typeof val === 'object' && val !== null;\n};\n\nconst classnames = (...args) => {\n  const classes = [];\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      classes.push(arg);\n    } else if (isObject(arg)) {\n      Object.keys(arg).forEach(key => {\n        if (arg[key]) {\n          classes.push(key);\n        }\n      });\n    } else {\n      throw new Error('`classnames` only accepts string or object as arguments');\n    }\n  });\n  return classes.join(' ');\n};\n\nclass FindaRide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      source: '',\n      post_address_obj: {},\n      errorMessage: '',\n      latitude: null,\n      longitude: null,\n      isGeocoding: false,\n      d_post_address_obj: {},\n      d_errorMessage: '',\n      d_latitude: null,\n      d_longitude: null,\n      d_isGeocoding: false,\n      destination: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Toper3, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.location.state.details.firstname, \" \", this.props.location.state.details.lastname), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" \", React.createElement(MDBCard, {\n      color: \"indigo\",\n      text: \"white\",\n      className: \"text-center\",\n      align: \"center\",\n      style: {\n        maxWidth: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"FILL IN THE DETAILS TO FIND A RIDE\"))))));\n  }\n\n}\n\nexport default FindaRide;","map":{"version":3,"sources":["C:/Users/Indraneel/Desktop/INR/frontend/my-app/src/components/FindaRide.js"],"names":["React","Component","Toper3","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","MDBCard","MDBCardBody","Fragment","axios","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","isObject","val","classnames","args","classes","forEach","arg","push","Object","keys","key","Error","join","FindaRide","constructor","props","state","source","post_address_obj","errorMessage","latitude","longitude","isGeocoding","d_post_address_obj","d_errorMessage","d_latitude","d_longitude","d_isGeocoding","destination","render","location","details","firstname","lastname","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Toper3 from './Toper3';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput,MDBCard, MDBCardBody } from 'mdbreact'; \r\nimport { Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\r\n\r\nconst isObject = val => {\r\n    return typeof val === 'object' && val !== null;\r\n  };\r\n  \r\n  const classnames = (...args) => {\r\n    const classes = [];\r\n    args.forEach(arg => {\r\n      if (typeof arg === 'string') {\r\n        classes.push(arg);\r\n      } else if (isObject(arg)) {\r\n        Object.keys(arg).forEach(key => {\r\n          if (arg[key]) {\r\n            classes.push(key);\r\n          }\r\n        });\r\n      } else {\r\n        throw new Error(\r\n          '`classnames` only accepts string or object as arguments'\r\n        );\r\n      }\r\n    });\r\n  \r\n    return classes.join(' ');\r\n  };\r\n\r\n\r\nclass FindaRide extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            source: '',\r\n            post_address_obj: {},\r\n            errorMessage: '',\r\n            latitude: null,\r\n            longitude: null,\r\n            isGeocoding: false,   \r\n            d_post_address_obj: {},\r\n            d_errorMessage: '',\r\n            d_latitude: null,\r\n            d_longitude: null,\r\n            d_isGeocoding: false,                      \r\n            destination : ''\r\n        }\r\n        }    \r\n    render() {\r\n        return (\r\n            <div>\r\n                    <Toper3 >{this.props.location.state.details.firstname} {this.props.location.state.details.lastname}</Toper3>\r\n                <MDBContainer>\r\n                <MDBRow>\r\n    \r\n                <MDBCol md=\"6\" className=\"mb-4\"  > {/*style={{ maxWidth: \"22rem\" }}*/}\r\n                <MDBCard color=\"indigo\" text=\"white\" className=\"text-center\" align=\"center\" style={{ maxWidth: \"22rem\" }}>\r\n                    <MDBCardBody align = \"center\" >\r\n                            FILL IN THE DETAILS TO FIND A RIDE\r\n                    </MDBCardBody>\r\n                </MDBCard> \r\n                </MDBCol>   \r\n                </MDBRow> \r\n                </MDBContainer>                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindaRide;"]},"metadata":{},"sourceType":"module"}